from convert_spectra_to_spec1dfits import *
from astropy.table import Table
import astropy.units as u


# Function for reading in the VHS 1256b files from Miles 2018
def spectrum_loader(spectrum_path):
    print(spectrum_path)
    spectrum_table = Table.read(spectrum_path, format='ascii',
                                names=['wavelength', 'flux', 'flux_uncertainty'],
                                units=[u.micron, u.watt/u.cm/u.cm/u.micron, u.watt/u.cm/u.cm/u.micron ])
    return spectrum_table

# make an Astropy table instead of a CSV file

# outside of loop. Same for every spectrum.
dataset_info = {
    'loader_function': spectrum_loader, # Function which loads the spectrum into an Astropy Table
    'fits_data_dir': '/Users/kelle/Dropbox (Personal)/Mac (3)/Downloads/VHS1256b', # Path of FITS output

    # Information about the publications the data come from
    'title': 'Methane in Analogs of Young Directly Imaged Exoplanets',  # Title of Paper
    'author': 'Miles et al.', # Authors of paper
    'bibcode': '2018ApJ...869...18M',  # Bibcode of paper
    'doi': '10.3847/1538-4357/aae6cd', # DOI of paper
    # 'dataset_comments': None,  # Any comments about the data provenance

    # Information about new spectra
    'vopub': 'SIMPLE Archive',  # SIMPLE Archive, if going to be served via SIMPLE
    'generated_history': 'This file generated by convert_spectra_to_spec1dfits.py',
    'voclass': 'Spectrum 1.0',  # corresponds to IVOA data model

    # Information that is true for all data
    'object_name': "VHS 1256-1257b",
    'RA': 194.007636,  # decimal degrees. TODO: String or float?
    'dec': -12.957692,  # decimal degrees TODO: String or float?
}

# Start loop over spectra here if more than one.

# First spectrum - NIRSPEC
NIRSPEC_spectrum_info = {
    'bandpass': 'nir',
    'aperture': '0.380', # [arcseconds]
    "observatory": 'Keck', # From https://github.com/astropy/astropy-data/blob/gh-pages/coordinates/sites.json
    'telescope': 'Keck II',
    'instrument': 'NIRSPEC',
    'file_path': "/Users/kelle/Dropbox (Personal)/Mac (3)/Downloads/vhs1256b_spectra_Figure8_Miles2018.txt",
    # "start_time":  , # MJD
    # "stop_time":
    # "exposure_time": , # in seconds
    'observation_date': '2016-06-19' ,  # YYYY-MM-DD
    # 'spectrum_comments':
}

spectrum_info_all = {**dataset_info, **NIRSPEC_spectrum_info}

# convert_to_fits(spectrum_info_all)

# Second spectrum - Optical
optical_spectrum_info = {
    'bandpass': 'nir',
    'aperture': '0.380',  # [arcseconds]
    'observatory': 'Keck',  # From https://github.com/astropy/astropy-data/blob/gh-pages/coordinates/sites.json
    'telescope': 'Keck II',
    'instrument': 'NIRSPEC',
    'file_path': "/Users/kelle/Dropbox (Personal)/Mac (3)/Downloads/vhs1256b_spectra_Figure8_Miles2018.txt",
    # "start_time":  , # [MJD]
    # "stop_time": # [MJD]
    # "exposure_time": , # [seconds]
    'observation_date': '2016-06-19' ,  # YYYY-MM-DD
    # 'spectrum_comments':
}
spectrum_info_all = {**dataset_info, **optical_spectrum_info}
# convert_to_fits(spectrum_info_all)

# END LOOP

# Plot the newly converted files
from glob import glob
from astropy.io import fits
from matplotlib import pyplot as plt
from specutils import Spectrum1D

files = glob(spectrum_info_all['fits_data_dir'] + '*.fits')

for fits_file in files:
    spec1d = Spectrum1D.read(fits_file, format='tabular-fits')
    fits = fits.open(fits_file)
    header = fits[0].header
    name = header['OBJECT']


    ax = plt.subplots()[1]
    # ax.plot(spec1d.spectral_axis, spec1d.flux)
    ax.errorbar(spec1d.spectral_axis.value, spec1d.flux.value, yerr=spec1d.uncertainty.array, fmt='o')
    ax.set_xlabel(f"Dispersion ({spec1d.spectral_axis.unit})")
    ax.set_ylabel(f"Flux ({spec1d.flux.unit})")  #try to get from header
    plt.xlim([2.8,4.0])
    plt.ylim([0,max(spec1d.flux[0:400]).value*1.50])
    plt.title(name)
    plt.show()